plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

repositories {
    maven {url "https://cursemaven.com"}
    maven { url "https://maven.blamejared.com" }
    maven { url "https://maven.shedaniel.me/" }
    maven {
        name = "Sinytra"
        url = "https://maven.su5ed.dev/releases"
    }

}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfig "simplyswords-common.mixins.json"
        mixinConfig "simplyswords.mixins.json"
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"
    modApi("me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth_config_version}")

    // Mythic Metals
    modImplementation "curse.maven:mythicmetals-410127:4644233"
    // slug / curseforge project ID / file ID "check url"

    // FFAPI
    modImplementation "dev.su5ed.sinytra.fabric-api:fabric-api:0.86.1+1.7.2+1.20.1"

    //Patchouli
    modImplementation ("vazkii.patchouli:Patchouli:1.20.1-81-FORGE")

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    //modImplementation ("curse.maven:gobber-301700:4007899")
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set("dev-shadow")
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set(null)
}

jar {
    archiveClassifier.set("dev")
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
